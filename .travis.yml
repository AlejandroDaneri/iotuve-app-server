sudo: required
language: python
python:
  - 3.7
services:
  - docker
before_install:
  # install heroku CLI
  - wget -qO- https://toolbelt.heroku.com/install.sh | sh
  # login to docker registries (dockerhub + heroku)
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - echo "$HEROKU_PASSWORD" | docker login -u "$HEROKU_USERNAME" --password-stdin registry.heroku.com
install:
  - pip3 install -r requirements.txt
  # build dockerized environment to run tests
  - docker-compose build
  - docker-compose up -d
script:
  #unit tests
  - docker exec -it app-server-flask bash -c "python -m unittest tests/* -v"
  #coverage
  - coverage run --omit */virtualenv/* -m unittest tests/* -v
after_success:
  - coveralls
deploy:
  - provider: script
    script:
      # build docker images, push to dockerhub & heroku
      docker build -t romicasal/fiuba-taller-2-app-server:staging .;
      docker tag romicasal/fiuba-taller-2-app-server:staging registry.heroku.com/$HEROKU_APP_NAME_STAGING/web;
      docker push romicasal/fiuba-taller-2-app-server:staging;
      docker push registry.heroku.com/$HEROKU_APP_NAME_STAGING/web;
      heroku container:release web --app $HEROKU_APP_NAME_STAGING
    on:
      branch: develop
  - provider: script
    script:
      # build docker images, push to dockerhub & heroku
      docker build -t romicasal/fiuba-taller-2-app-server:production .;
      docker tag romicasal/fiuba-taller-2-app-server:production registry.heroku.com/$HEROKU_APP_NAME/web;
      docker push romicasal/fiuba-taller-2-app-server:production;
      docker push registry.heroku.com/$HEROKU_APP_NAME/web;
      heroku container:release web --app $HEROKU_APP_NAME
    on:
      branch: master
